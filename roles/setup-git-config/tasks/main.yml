---
# tasks for setting up the Git user and email for a given Repo ,all variable defined under group_vars
# git_config_user(); --Done
# git_check_origin();
# git_switch_branch();
# git_check_branch();

# # Determine version from environment
# my $version = determine_version($GIT_BRANCH);
#
# # Check is new tag
# check_existing_tag($version);
#
# # Update and save
# save_version($version, $VERSION_FILE);
#
# # Tag and push
# git_tag_and_push($version);
#
# # Switch to tag
# git_switch_to_tag($version);
#
# # Generate release.properties
# generate_release_properties($version);
#
# # Successful
# banner(" ");
# banner("GIT TAG AND RELEASE COMPLETE.");
# banner(" ");
# banner();
# print "\n";

- name: Configuring GIT user.name and user.email
  git_config:
    name="{{ item.name }}"
    repo="{{ git_repo }}"
    scope=local
    value="{{ item.value }}"
  with_items:
    - {name: "user.name",  value: "{{ git_user_name }}" }
    - {name: "user.email", value: "{{ git_user_email }}" }
    # - {name: "ui.color",   value: "True" }
- name: Setting Git origin
  git_config:
    name="{{ item.name}}"
    repo="{{ git_repo }}"
    scope=local
    value="{{ item.value}}"
  with_items:
    - {name: "remote.origin.url", value: "{{ git_origin_repo }}" }
    # value: user.email
- name: List all Git variables
  git_config:
    list_all=yes
    repo="{{git_repo}}"

- name: Inspect a single image
  docker_image_facts:
    name="rancher/server"
# - name: remove docker-py
#   pip:
#     name: docker-py
#     state: absent
#
# - name: Install docker python module
#   pip:
#     name: "docker-compose==1.12.0"
